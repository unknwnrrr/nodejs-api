name: 'Building Production Package'
on:
  push:
    branches: [test] # or the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonar:
    name: Sonarqube Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: docker://sonarsource/sonar-scanner-cli:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  build-dev:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-18.04]
        node-version: [12.X, 14.x, 16.X]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run build
  docker-image:
    name: Building Docker Image Production
    needs: [sonar, build-dev]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and Push Docker Image of branche
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: erickespinozat/nodejs-api
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          addLatest: true
  deploy-docker-compose:
    name: Deploying to server
    runs-on: ubuntu-latest
    needs: [docker-image]
    steps:
    - uses: actions/checkout@v2
    - uses: alex-ac/github-action-ssh-docker-compose@master
      name: Docker-Compose Remote Deployment
      with:
        ssh_host: ${{ secrets.SSH_HOST }}
        ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
        ssh_user: ${{ secrets.SSH_USER }}
        docker_compose_filename: ./docker-compose.yml
  tag-release:
    name: Generate Tag Release
    runs-on: ubuntu-latest
    needs: [deploy-docker-compose]
    steps:
    - uses: actions/checkout@v2
    - uses: christophebedard/tag-version-commit@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
