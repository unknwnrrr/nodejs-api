name: NTT Data Pipeline CICD
on:
  push:
    branches: [master, test, cicd] # or the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build-dev:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run build
      - uses: actions/checkout@master
      - name: Read current version
        id: read_property
        uses: christian-draeger/read-properties@1.0.0
        with:
          path: './WorkflowEngine/VERSION'
          property: 'version'
          token: ${{ secrets.GITHUB_TOKEN }}        
      - name: Current version
        run: echo ${{ steps.read_property.outputs.value }}
      - name: Bump release version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.0
        with:
          current-version: ${{ steps.read_property.outputs.value }}
          version-fragment: 'bug'
      - name: New version
        run: echo ${{ steps.bump_version.outputs.next-version }}
      - name: Remove existing version file
        uses: JesseTG/rm@v1.0.0
        with:
          path: './WorkflowEngine/VERSION'
      - name: Write new version
        uses: christian-draeger/write-properties@1.0.0
        with:
          path: './WorkflowEngine/VERSION'
          property: 'version'
          value: ${{ steps.bump_version.outputs.next-version }}
  sonar:
    name: Sonarqube Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: docker://sonarsource/sonar-scanner-cli:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  
  build-docker-image:
      name: Building Docker Image
      # needs: [sonar, build-dev]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v1
        - name: Build and Push Docker Image of branche
          uses: mr-smithers-excellent/docker-build-push@v5
          with:
            image: erickespinozat/nodejs-api
            registry: docker.io
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            addLatest: true